{
    "contents" : "rm(list = ls())\nset.seed(203)\n\n##\n## Libraries and Subroutines\n##\n\nsource('dinvgamma.R')\n\n##\n## Simulate Data\n##\n\nm <- 100 # number of spatial locations\nlocs <- seq(0, 1, , m) # spatial coordinate\nX <- cbind(rep(1, m), locs)\nreps <- 100 # number of spatial fields\nbeta <- c(0, 2) # beta\ns2.s <- 1\nphi <- 2\ns2.e <- 0.5\nsamp.size <- 40\n\nsource('make.spatial.field.R')\nfield <- make.spatial.field(reps, X, beta, locs, c(s2.s, phi), method = 'exponential', s2.e, samp.size)\n\n\n##\n## Initialize priors and tuning paramteters\n##\n\nmu.0 <- c(0, 2)#rep(0, dim(X)[2])\nsigma.squared.0 <- 0.025\n#Sigma.0 <-\nalpha.beta <- 10\nbeta.beta <- 10\ncurve(dinvgamma(x, alpha.beta, beta.beta))\nalpha.eta <- 10\nbeta.eta <- 10\ncurve(dinvgamma(x, alpha.eta, beta.eta))\nalpha.epsilon <- 40\nbeta.epsilon <- 20\ncurve(dinvgamma(x, alpha.epsilon, beta.epsilon))\nalpha.phi <- 10\nbeta.phi <- 10\ncurve(dinvgamma(x, alpha.phi, beta.phi))\n\nsigma.squared.beta.tune <- 0.025\nsigma.squared.eta.tune <- 0.125\nsigma.squared.epsilon.tune <- 0.075\nphi.tune <- 0.25\n\nn.mcmc <- 1000\n\nsource('mcmc.spatial.R')\n\n##\n## Fit spatial MCMC kriging model\n##\n\nstart <- Sys.time()\nout <- mcmc.1d(field$Y.list, field$H.list, X, locs, n.mcmc, mu.0, Sigma.0, alpha.epsilon, beta.epsilon, alpha.beta, beta.beta, alpha.phi, beta.phi, mu.beta, sigma.squared.eta.tune, sigma.squared.epsilon.tune, phi.tune)\nfinish <- Sys.time() - start\nfinish #100 iterations takes 8 minutes\n\n##\n## Plot output\n##\n\n#x11()\nlayout(matrix(1:9, nrow = 3))\nmatplot(t(out$mu.beta.save), type = 'l')\nabline(h = beta[1], col = 'black')\nabline(h = beta[2], col = 'red')\nplot(out$sigma.squared.beta.save, type = 'l')\nplot(out$sigma.squared.epsilon.save, type = 'l', main = paste(\"accept rate\", round(out$epsilon.accept, 2)))\nabline(h = s2.e)\nplot(out$sigma.squared.eta.save, type = 'l', main = paste(\"accept rate\", round(out$eta.accept, 2)))\nabline(h = s2.s)\nplot(out$phi.save, type = 'l', main = paste(\"accept rate\", round(out$phi.accept, 2)))\nabline(h = phi)\nmatplot(out$fort.raster, type = 'l')\nplot.field(field$Z.list, H.list = rep(list(1:length(field$Z.list[[1]])), reps), locs = locs)\n#plot.field(Z.list, H.list = rep(list(1:length(Z.list[[1]])), reps), locs = locs)\nhist(out$mu.beta.save[1, ])\nabline(v = mean(out$mu.beta.save[1, ]), col = 'red')\nabline(v = quantile(out$mu.beta.save[1, ], probs = c(0.025, 0.975)), col = 'blue')\nhist(out$mu.beta.save[2, ])\nabline(v = mean(out$mu.beta.save[2, ]), col = 'red')\nabline(v = quantile(out$mu.beta.save[2, ], probs = c(0.025, 0.975)), col = 'blue')\n\n",
    "created" : 1389937135626.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3334726249",
    "id" : "5AE0F56F",
    "lastKnownWriteTime" : 1389937206,
    "path" : "~/1dSpatialSim/spatial.script.R",
    "project_path" : "spatial.script.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}